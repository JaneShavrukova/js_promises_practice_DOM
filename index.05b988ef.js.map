{"mappings":"ACEA,IAAM,EAAe,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EAKE,SAAS,gBAAgB,CAAC,QAJN,WAClB,EAAQ,6BACV,EAEgD,CAAE,KAAM,CAAA,CAAK,GAE7D,WAAW,WACT,EAAO,AAAI,MAAM,8BACnB,EAAG,IACL,GAEM,EAAgB,IAAI,QAAQ,SAAC,CAAnC,EACE,IAAM,EAAc,WAClB,EAAQ,8BACV,EAEA,SAAS,gBAAgB,CAAC,QAAS,EAAa,CAAE,KAAM,CAAA,CAAK,GAC7D,SAAS,gBAAgB,CAAC,cAAe,EAAa,CAAE,KAAM,CAAA,CAAK,EACrE,GAEM,EAAe,IAAI,QAAQ,SAAC,CAAlC,EACE,IAAI,EAAoB,CAAA,EACpB,EAAqB,CAAA,EAEnB,EAAc,SAAC,CAAA,CAAW,CAAhC,EACM,GAAa,GACf,EAAQ,6BAEZ,EAEA,SAAS,gBAAgB,CAAC,QAAS,SAAC,CAApC,EAGE,EAFA,EAAoB,CAAA,EAEW,EACjC,GAEA,SAAS,gBAAgB,CAAC,cAAe,SAAC,CAA1C,EAGE,EAAY,EAFZ,EAAqB,CAAA,EAGvB,EACF,GAEM,EAAgB,SAAC,CAAvB,EAAgC,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,EAAA,SAAA,CAAA,EAAA,CACxB,EAAgB,SAAS,aAAa,CAAC,MAE7C,CAAA,EAAc,OAAO,CAAC,EAAE,CAAG,eAC3B,EAAc,WAAW,CAAG,EAC5B,EAAc,SAAS,CAAG,EAAU,QAAU,UAE9C,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,EAEA,EACG,IAAI,CAAC,SAAC,CADT,EAEI,EAAc,EAChB,GACC,KAAK,CAAC,SAAC,CADR,EAEE,EAAc,EAAM,OAAO,CAAE,CAAA,EAC/B,GAEF,EAAc,IAAI,CAAC,SAAC,CAApB,EACE,EAAc,EAChB,GAEA,EAAa,IAAI,CAAC,SAAC,CAAnB,EACE,EAAc,EAChB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar firstPromise = new Promise(function(resolve, reject) {\n    var handleClick = function() {\n        resolve(\"First promise was resolved\");\n    };\n    document.addEventListener(\"click\", handleClick, {\n        once: true\n    });\n    setTimeout(function() {\n        reject(new Error(\"First promise was rejected\"));\n    }, 3000);\n});\nvar secondPromise = new Promise(function(resolve) {\n    var handleClick = function() {\n        resolve(\"Second promise was resolved\");\n    };\n    document.addEventListener(\"click\", handleClick, {\n        once: true\n    });\n    document.addEventListener(\"contextmenu\", handleClick, {\n        once: true\n    });\n});\nvar thirdPromise = new Promise(function(resolve) {\n    var leftClickHappened = false;\n    var rightClickHappened = false;\n    var checkClicks = function(leftClick, rightClick) {\n        if (leftClick && rightClick) resolve(\"Third promise was resolved\");\n    };\n    document.addEventListener(\"click\", function(e) {\n        leftClickHappened = true;\n        checkClicks(leftClickHappened, rightClickHappened);\n    });\n    document.addEventListener(\"contextmenu\", function(e) {\n        rightClickHappened = true;\n        checkClicks(leftClickHappened, rightClickHappened);\n    });\n});\nvar resultHandler = function(message) {\n    var isError = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    var resultMessage = document.createElement(\"div\");\n    resultMessage.dataset.qa = \"notification\";\n    resultMessage.textContent = message;\n    resultMessage.className = isError ? \"error\" : \"success\";\n    document.body.appendChild(resultMessage);\n};\nfirstPromise.then(function(message) {\n    resultHandler(message);\n}).catch(function(error) {\n    resultHandler(error.message, true);\n});\nsecondPromise.then(function(message) {\n    resultHandler(message);\n});\nthirdPromise.then(function(message) {\n    resultHandler(message);\n});\n\n//# sourceMappingURL=index.05b988ef.js.map\n","'use strict';\n\nconst firstPromise = new Promise((resolve, reject) => {\n  const handleClick = () => {\n    resolve('First promise was resolved');\n  };\n\n  document.addEventListener('click', handleClick, { once: true });\n\n  setTimeout(() => {\n    reject(new Error('First promise was rejected'));\n  }, 3000);\n});\n\nconst secondPromise = new Promise((resolve) => {\n  const handleClick = () => {\n    resolve('Second promise was resolved');\n  };\n\n  document.addEventListener('click', handleClick, { once: true });\n  document.addEventListener('contextmenu', handleClick, { once: true });\n});\n\nconst thirdPromise = new Promise((resolve) => {\n  let leftClickHappened = false;\n  let rightClickHappened = false;\n\n  const checkClicks = (leftClick, rightClick) => {\n    if (leftClick && rightClick) {\n      resolve('Third promise was resolved');\n    }\n  };\n\n  document.addEventListener('click', (e) => {\n    leftClickHappened = true;\n\n    checkClicks(leftClickHappened, rightClickHappened);\n  });\n\n  document.addEventListener('contextmenu', (e) => {\n    rightClickHappened = true;\n\n    checkClicks(leftClickHappened, rightClickHappened);\n  });\n});\n\nconst resultHandler = (message, isError = false) => {\n  const resultMessage = document.createElement('div');\n\n  resultMessage.dataset.qa = 'notification';\n  resultMessage.textContent = message;\n  resultMessage.className = isError ? 'error' : 'success';\n\n  document.body.appendChild(resultMessage);\n};\n\nfirstPromise\n  .then((message) => {\n    resultHandler(message);\n  })\n  .catch((error) => {\n    resultHandler(error.message, true);\n  });\n\nsecondPromise.then((message) => {\n  resultHandler(message);\n});\n\nthirdPromise.then((message) => {\n  resultHandler(message);\n});\n"],"names":["firstPromise","Promise","resolve","reject","document","addEventListener","once","setTimeout","Error","secondPromise","handleClick","thirdPromise","leftClickHappened","rightClickHappened","checkClicks","leftClick","rightClick","e","resultHandler","message","isError","arguments","length","resultMessage","createElement","dataset","qa","textContent","className","body","appendChild","then","catch","error"],"version":3,"file":"index.05b988ef.js.map"}